       UNIX/LINUX COMMANDS
mkdir->create a new directory with a  new name
cd-> change the directory
touch->create empty files
cat>filename->create new files and write the content and press CTRL+d to save the content into file
cat file1 file2>file3-> creates new files and content of both files will be copied to new file
cat->display  the content of file
ls->list the content of directories
ls *.txt-> list all the files with given extensions
pwd->current working directory
cp->copy a file or directory
mv-> moves a file or directory
head->display first 10 lines of a file
tail-> display last 10 lines of a file
tac-> display file content lines in reverse
more->similar to the cat and here we can display large content by using ENTER,SPACEBAR
id->Display id of user/group
clear->claer the screen
vi-> text editor to write prodrams to text
grep-> filter the search goven pattern in the field content
diff-> compare the content of two diff files
ping->check the connectivity status of server
history->review all the commands which you have entered
host name-> display host name
host name-i-> display host ip
chmod-> change the usr/gropu permission to access file
nl-> display the line number
wc-> given number of lines/words and charaters available in the file content
uniq-> remove duplicates of file content/ it can remove only continuous duplicates
rmdir-> removes the specified directory (directory should be empty)
rm-> remove file
VI COMMANDS:-
1) esc + : + wq!-> to save and exit
2) esc + : + q-> to exit without saving
3) esc + : + /qhnjid-> to fing for a particular letter or word
4) esc + : + set number-> to set number to every line
5) esc + shift + G-> to go the last line in the VI editor
Notes:-
1) rm -R directory name:- to remove the directory
2) tail -n 2 -f filename:- to review the last 2 lines of te file
   tail-> last lines
   -n -> no of lines
   2-> number
   -f -> file name
   filename-> name of the file
3) Ctrl+c -> to esc from the command
        GITHUB/GIT BASH
1) mkdir:- to create a new directory
2) ls->list the content of directories
3) touch filename-> to create a file name
4) git add filename-> to add a file
5) git add file1 file2-> to add multilpe files 
6) git status-> if the color is red then it is in working area & if green then it is added and sent to working area
7) git add ./* ->all the files which are present will be added and sent to staging area
8) vi filename-> to write the code/description in the git bash
9) git commit -m "description"-> to assign an unique id we use git commit
10) git log-> it is like a history which tells which developer used the code
11) git clone https request(URL CODE)-> which gives access to the users account
12) git push-> to push the local repository to the git hub account
13) git pull-> to pull the access from the github repository to make any changes in the code 
